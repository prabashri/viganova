---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { siteDefaults } from '@/config/siteDefaults';
import { siteImages } from '@/config/siteImages'; 
import type { HeadProps } from '@/types/HeadProps';
import HeroCollections from '@/components/ui/HeroCollections.astro';
import CardCollections from '@/components/ui/CardCollections.astro';
import type { CardProps } from '@/types/CardProps';
import { getCollection } from 'astro:content';

// =========================
// ðŸ”¹ Constants
// =========================
const entry = "blog";
const entryConfig = siteDefaults.collections[entry];
const basePath = entryConfig?.base ? `/${entryConfig.base}` : ``;

// =========================
// ðŸ”¹ Get blog posts
// =========================
const posts = (await getCollection(entry))
  .filter(post =>
    !post.id.startsWith('_') && post.data?.draft !== true
  )
  .sort(
    (a, b) => new Date(b.data.publishedDate).valueOf() - new Date(a.data.publishedDate).valueOf()
  );

// =========================
// ðŸ”¹ SEO
// =========================
const headProps: HeadProps = {
  title: `All Blog Posts | ${siteDefaults.siteName}`,
  description: `Browse all blog posts for tools, guides, and tutorials on ${siteDefaults.siteName}.`,
  image: siteImages.image,
  canonicalUrl: `${siteDefaults.siteUrl}${basePath}/`,
  index: true,
  keywords: posts.map(p => p.data.title),
  type: 'collection',
  url: `${siteDefaults.siteUrl}${basePath}/`,
  authors: []
};

// =========================
// ðŸ”¹ Map posts to CardProps
// =========================
function mapToCardProps(post: any, index: number): CardProps {
  const postSlug = post.data.slug ?? post.id; // Fallback to id if no slug in frontmatter
  return {
    link: `${basePath}/${postSlug}/`,
    linkAriaLabel: `Read blog post: ${post.data.title}`,
    image: post.data.heroImage ?? '',
    imageAlt: post.data.heroImageAlt ?? post.data.title,
    title: post.data.title,
    description: post.data.description ?? '',
    afterDescription: post.data.publishedDate
      ? new Date(post.data.publishedDate).toLocaleDateString()
      : '',
    orientation: 'vertical',
    imageSize: 320,
    roleType: 'list',
    loading: index < 3 ? 'eager' : 'lazy' // First 3 eager
  };
}

const blogCards: CardProps[] = posts.map((post, index) => mapToCardProps(post, index));
---

<BaseLayout headProps={headProps}>
  <HeroCollections
    title="All Blog Posts"
    description={`Browse all blog posts for tools, guides, and tutorials on ${siteDefaults.siteName}.`}
    bgColorClass="bg-secondary-base"
    textColorClass="col-base-00"
    image={siteImages.image}
    imageAlt="Blog Hero Image"
    imageLoading="delay"
  />

  {blogCards.length > 0 && (
    <section class="max-w-site mx-auto my-2 py-2">
      <CardCollections cards={blogCards} wrapper="ul" roleType="list" entry={entry} />
    </section>
  )}
</BaseLayout>
