---
// src/pages/contact-us.astro
import BaseLayout from '../layouts/BaseLayout.astro';
import type { HeadProps } from '../types/HeadProps';

import { siteDefaults } from '../config/siteDefaults';
import { siteFunctions } from '../config/siteFunctions';

import Contact from '@/content/pages/Contact.astro';
import ContactFormHead from '@/components/forms/ContactFormHead.astro';
import FilesToLoadCSS from "@/components/FilesToLoadCSS.astro";

import assetsManifest from '@/data/assets-manifest.json';

// NEW utils
import { lastModifiedRaw } from '@/utils/last-modified';
import { toMachineDate, toHumanDate, machineAndHuman } from '@/utils/date-format';

const isDev = import.meta.env.DEV;

// Page config (centralized)
const cfg = siteDefaults.pages.contact ?? {
  title: 'Contact',
  description: 'Get in touch with us.',
  enabled: true,
  index: true,
  sitemap: true,
  path: '/contact-us/',
};

// ✅ SSR redirect if disabled
if (!cfg.enabled) {
  return Astro.redirect('/', 307);
}

// Use configured path purely for canonical/OG (Astro route stays this file)
const PATH = cfg.path ?? '/contact-us/';

// Resolve last-modified (generator key 'contact' → fallback 'contact-us' → publishedDate)
const rawLastMod = lastModifiedRaw(['contact', 'contact-us'], siteDefaults.publishedDate);

// Machine (ISO) for SEO/meta; Human for UI (honor siteFunctions.dateFormat if provided)
// const updatedAtISO = toMachineDate(rawLastMod, 'now');
// const updatedAtHuman = toHumanDate(rawLastMod, 'now');
const { iso: updatedAtISO, human: updatedAtHuman } = machineAndHuman(rawLastMod, 'now');


// Derive form script (dev vs. prod, tolerate either manifest shape)
const man: any = assetsManifest as any;
const contactFormSrc = isDev
  ? '/scripts/contact-form.js'
  : (man?.js?.['contact-form.js'] || man?.['contact-form.js'] || '/scripts/contact-form.js');

// Turnstile + handler availability
const isFormAvailable = isDev ? true : Boolean(siteFunctions.contactFormHandler && siteFunctions.turnstileSitekey);

// SEO
const pageSeo: HeadProps = {
  title: cfg.title,
  description: cfg.description,
  image: '',
  type: 'contact',
  url: `${siteDefaults.siteUrl}${PATH}`,
  canonicalUrl: `${siteDefaults.siteUrl}${PATH}`,
  siteName: siteDefaults.siteName,
  authors: [],
  publishedAt: siteDefaults.publishedDate,
  updatedAt: updatedAtISO,
  index: cfg.index ?? true,
  keywords: [...siteDefaults.keywords, 'Contact'],
  showBreadcrumb: false,
};
---

<BaseLayout headProps={pageSeo}>
  {/* Head slot: preconnect + scripts via the small head helper */}
  <Fragment slot="headContent-top">
    <ContactFormHead
      enableTurnstile={isFormAvailable}
      turnstileSitekey={siteFunctions.turnstileSitekey}
      placeScript="top"
    />
    <FilesToLoadCSS
        files={[
          { name: "contact-form", inline: true}
        ]}
      />
  </Fragment>

  <Fragment slot="headContent-bottom">
    <ContactFormHead
      enableTurnstile={isFormAvailable}
      turnstileSitekey={siteFunctions.turnstileSitekey}
      formScriptSrc={contactFormSrc}
      placeScript="bottom"
    />
  </Fragment>

  {/* Page content (Contact includes the form internally) */}
  <Contact
    title={cfg.title}
    description={cfg.description}
    updatedAt={updatedAtHuman}
    isFormAvailable={isFormAvailable}    
  />
</BaseLayout>
