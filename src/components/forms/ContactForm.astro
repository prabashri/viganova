---
import { siteFunctions } from '@/config/siteFunctions';

// src/components/forms/ContactForm.astro

interface Props {
  contactEmail: string;
  brand: string;
  handler?: string;
  turnstileSitekey?: string;
  subjectOptions?: string[];
  defaultReviewScore?: number; // 1â€“5
}
const isProd = import.meta.env.PROD;
let {
  contactEmail,
  brand,
  handler,
  turnstileSitekey,
  subjectOptions = [
    'Support','Feedback','Suggestions','Business Enquiries','Reviews','Comment','Security'
  ],
  defaultReviewScore = 3,
} = Astro.props as Props;

if (!isProd) {
  turnstileSitekey = siteFunctions.turnstileSitekeyTest || '';
}

---

<div id="contact-form-container">
      
  <div id="success-box" class="form-status success-box display-none br-r p-05"></div>

  <form id="contact-form" novalidate class="contact-form flex flex-col w-100p max-w-420 mi-auto my-0 gap-05" aria-label="Contact Form" autocomplete="on">
    {/*<!-- Honeypot -->*/}  
 
    <div class="form-group honeypot flex flex-col gap-05 display-none" aria-hidden="true">
      <label for="website">Form name</label>
      <input type="text" id="website" name="website" tabindex="-1" autocomplete="off" />
    </div>

    {/*<!-- Hidden technical fields -->*/}
    <input type="hidden" name="token" />
    <input type="hidden" name="postUrl" value="" />
    <input type="hidden" name="postTitle" value="" />
    <input type="hidden" name="adminEmail" value={contactEmail} />
    <input type="hidden" name="brand" value={brand} />
    {handler && <input type="hidden" name="handler" value={handler} />}

    {/*<!-- Name -->*/}
    <div class="form-group">
      <label for="name">Name <span class="required">*</span></label>
      <input id="name" name="name" type="text" class="form-control p-05 br-base-100 br-r text-base col-base-80 bg-base-00" required autocomplete="name" />
    </div>

    {/*<!-- Email -->*/}
    <div class="form-group">
      <label for="email">Email <span class="required">*</span></label>
      <input id="email" name="email" type="email" class="form-control" required autocomplete="email" />
    </div>

    {/*<!-- Subject -->*/}
    <div class="form-group">
      <label for="subject">Subject <span class="required">*</span></label>
      <select id="subject" name="subject" class="form-control" required>
        <option value="">Select</option>
        {subjectOptions.map((opt) => <option value={opt}>{opt}</option>)}
      </select>
    </div>

    {/*<!-- Conditional: Reviews -->*/}
    <fieldset id="review-fields" class="conditional-fields hidden">
      <legend class="sr-only">Review Details</legend>
      <div class="form-group">
        <label for="affiliation">Affiliation <span class="required">*</span></label>
        <input id="affiliation" name="affiliation" type="text" class="form-control" />
      </div>
      <div class="form-group">
        <label for="reviewScore">How do you rate us? <span class="required">*</span></label>
        <select id="reviewScore" name="reviewScore" class="form-control">
          {[1,2,3,4,5].map(n => (
            <option value={String(n)} selected={n === defaultReviewScore}>
              {n} {n===1?' - Poor':n===2?' - Fair':n===3?' - Good':n===4?' - Very Good':' - Excellent'}
            </option>
          ))}
        </select>
      </div>
      <div class="form-group">
        <label for="isPublicReview">
          <input type="checkbox" id="isPublicReview" name="isPublicReview" checked /> Use my review publicly with name.
        </label>
      </div>
    </fieldset>

    {/*<!-- Conditional: Comments -->*/}
    <fieldset id="comment-fields" class="conditional-fields hidden">
      <legend class="sr-only">Comment Visibility</legend>
      <div class="form-group">
        <label for="isPublicComment">
          <input type="checkbox" id="isPublicComment" name="isPublicComment" checked /> Make my comment public
        </label>
      </div>
    </fieldset>

    {/*<!-- Message -->*/}
    <div class="form-group">
      <label for="message">Message <span class="required">*</span></label>
      <textarea id="message" name="message" class="form-control" rows="3" required></textarea>
    </div>

    {turnstileSitekey && (
      <div class="form-group">
        <div id="cf-turnstile" class="cf-turnstile" data-sitekey={turnstileSitekey}></div>
      </div>
    )}

    {/*<!-- Submit -->*/}
    <button type="submit" class="form-submit bg-primary col-base-00 bold p-05 br-r border-none pointer transition-common">Send</button>
    <div id="form-status" class="form-status text-small ta-center mt-5" role="status" aria-live="polite"></div>
  </form>
</div>

