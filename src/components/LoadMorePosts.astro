---
interface Props {
  slug: string;
  loaded: number;
  total: number;
  sort?: string;
  collections: string[];
}

const {
  slug,
  loaded = 0,
  total = 0,
  sort = 'lastmodified',
  collections = ['blog', 'post'],
} = Astro.props;

const nonce = (Astro.locals as any).nonce;
---

<div class="flex jc-center my-2">
  <button
    id="loadMoreBtn"
    class="btn br-secondary br-r ta-center hover-bg-primary-light"
    data-slug={slug}
    data-loaded={loaded}
    data-total={total}
    data-sort={sort}
    data-collections={collections.join(',')}
  >
    Load More
  </button>
</div>

<script nonce={nonce} id="load-more-posts" type="module" is:inline>
  const btn = document.querySelector('#loadMoreBtn');
  const container = document.querySelector('#author-posts');
  const offset = 6; // Adjust based on initial load size

  if (!btn || !container) {
    console.warn('Missing Load More button or author-posts container.');
  }

  const slug = btn.dataset.slug || '';
  let loaded = Number(btn.dataset.loaded || '0');
  const total = Number(btn.dataset.total || '0');
  const sort = btn.dataset.sort || 'lastmodified';
  const collections = (btn.dataset.collections || 'blog,post').split(',');

  async function loadMorePosts() {
    btn.disabled = true;

    const params = new URLSearchParams({
      slug,
      offset: offset.toString(),
      loaded: loaded.toString(),
      total: total.toString(),
      sort,
    });

    collections.forEach((c) => params.append('collections', c));

    try {
      const res = await fetch(`/api/posts-by-author/?${params.toString()}`);
      const { posts, hasMore } = await res.json();

      posts.forEach((p) => {
        const anchor = document.createElement('a');
        const base = p.collectionBase ? p.collectionBase : '';
        anchor.href = `/${base}${p.slug}/`;
        anchor.className = 'block td-none br-primary br-r bg-base-00 hover-box-shadow transition p-05 my-1 max-w-sidebar w-100p';

        const titleDiv = document.createElement('div');
        titleDiv.className = 'font-bold text-lg my-1';
        titleDiv.textContent = p.title;

        const descDiv = document.createElement('div');
        descDiv.className = 'text-s col-base-80 clamp-3';
        descDiv.textContent = p.description;

        anchor.appendChild(titleDiv);
        anchor.appendChild(descDiv);
        container?.appendChild(anchor);
      });

      loaded += posts.length;
      btn.dataset.loaded = loaded.toString();
      btn.disabled = false;

      if (loaded >= total || !hasMore) {
        btn.style.display = 'none';
      }
    } catch (err) {
      console.error('‚ùå Failed to load posts:', err);
      btn.disabled = false;
      btn.textContent = 'Try Again';
    }
  }

  btn?.addEventListener('click', loadMorePosts);
</script>

