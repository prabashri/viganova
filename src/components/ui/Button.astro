---
// src/components/ui/Button.astro
interface Props {
  id: string;
  label: string;

  type?: 'button' | 'submit' | 'reset';
  variant?: 'primary' | 'secondary' | 'plain';
  className?: string;

  ariaLabel?: string;
  ariaExpanded?: boolean;
  ariaControls?: string;
  ariaPressed?: boolean;
  ariaHasPopup?: 'menu' | 'listbox' | 'dialog' | 'grid' | 'tree' | 'true' | 'false';

  disabled?: boolean;
  title?: string;
  name?: string;
  value?: string;
  form?: string;

  dataAction?: string;
  dataLabel?: string;
  dataTargets?: string;
}

const {
  id, label, type = 'button', variant = 'primary', className = '',
  ariaLabel, ariaExpanded, ariaControls, ariaPressed, ariaHasPopup,
  disabled = false, title, name, value, form, dataAction, dataLabel, dataTargets, ...rest
} = Astro.props;

const variantClassMap = {
  primary: 'button col-base-00 hover-col-base-100 hover-fill-base-100 bg-primary hover-bg-base-00 transition focus-vis-bg-primary-lighter focus-vis-col-base-100',
  secondary: 'button bg-transparent br-thick col-primary hover-col-base-100 hover-fill-base-100 br-thick hover-bg-primary-light transition focus-vis-bg-primary focus-vis-col-base-00',
  plain: 'button bg-transparent col-inherit hover-bg-primary-lighter hover-col-base-100 hover-fill-base-100 transition focus-vis-bg-primary focus-vis-col-base-100',
};

const variantClass = variantClassMap[variant] ?? '';
const computedClass = `${variantClass} ${className}`.trim();
const resolvedLabel = label;

const extraAttributes = {
  'aria-label': ariaLabel ?? resolvedLabel,
  'aria-expanded': ariaExpanded,
  'aria-controls': ariaControls,
  'aria-pressed': ariaPressed,
  'aria-haspopup': ariaHasPopup,
  'title': title ?? resolvedLabel,
  'name': name,
  'value': value,
  'form': form,
  'data-action': dataAction ?? 'button-click',
  'data-label': dataLabel ?? resolvedLabel,
  'data-targets': dataTargets,
};
---
<button
  id={id}
  type={type}
  class={computedClass}
  disabled={disabled}
  {...Object.fromEntries(Object.entries(extraAttributes).filter(([, v]) => v !== undefined))}
  {...rest}
>
  <slot name="icon-left" />
  <slot />
  <slot name="icon-right" />
</button>
